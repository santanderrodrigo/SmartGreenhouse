#define DISABLE_ETHERNET_CHECKSUM

#include <UIPEthernet.h>



// Configuración de la red y el módulo ENC28J60
byte mac[] = { 0xDD, 0xDD, 0xDD, 0x00, 0x01, 0x05 };
IPAddress ip(192, 168, 27, 47);
EthernetServer server(80); // Servidor HTTP en el puerto 80

const int ledPin = 2; // Pin para el LED

// Estado del LED
String EstadoLed = "OFF";

void setup() {
  Serial.begin(9600);
  Serial.println("Test del Modulo ENC28J60 con UIPEthernet");

  // Inicializar la conexión Ethernet
  Ethernet.begin(mac, ip);
  
  if (Ethernet.localIP() == IPAddress(0, 0, 0, 0)) {
    Serial.println("Error al obtener la dirección IP");
  } else {
    Serial.print("Dirección IP asignada: ");
    Serial.println(Ethernet.localIP());
  }
  
  // Iniciar el servidor
  server.begin();
  Serial.println("Servidor HTTP iniciado");
  
  pinMode(ledPin, OUTPUT);
  digitalWrite(ledPin, LOW);
}

// Función para construir la página web
void homePage(EthernetClient &client) {
  client.println("HTTP/1.1 200 OK");
  client.println("Content-Type: text/html");
  client.println("Connection: close");
  client.println();
  
  client.println("<html><head><title>Naylamp Mechatronics</title></head>");
  client.println("<body style='text-align:center;'>");
  client.println("<h1>Test del Módulo ENC28J60</h1>");
  client.print("Tiempo transcurrido: ");
  client.print(millis() / 1000);
  client.println(" segundos<br />");
  
  client.print("Estado del LED: ");
  client.print(EstadoLed);
  client.println("<br /><br />");
  
  // Botones para encender/apagar el LED
  client.println("<a href='/?status=ON'><input type='button' value='ON'></a>");
  client.println("<a href='/?status=OFF'><input type='button' value='OFF'></a>");
  
  client.println("<br /><br />");
  client.print("Potenciómetro: ");
  client.print(analogRead(A0));
  client.println(" (resolución de 1024)");
  client.println("<br /><br />");
  
  client.println("<a href='https://naylampmechatronics.com/'>naylampmechatronics.com</a>");
  client.println("</body></html>");
}

// Función principal para manejar las solicitudes HTTP
void loop() {
  EthernetClient client = server.available();
  
  if (client) {
    Serial.println("Cliente conectado");
    String request = client.readStringUntil('\r');
    Serial.println("Solicitud recibida:");
    Serial.println(request);
    client.flush();

    // Verificar si se recibió un comando para encender/apagar el LED
    if (request.indexOf("GET /?status=ON") != -1) {
      Serial.println("Comando ON recibido");
      digitalWrite(ledPin, HIGH);
      EstadoLed = "ON";
    } 
    else if (request.indexOf("GET /?status=OFF") != -1) {
      Serial.println("Comando OFF recibido");
      digitalWrite(ledPin, LOW);
      EstadoLed = "OFF";
    }

    // Enviar la página web de respuesta
    homePage(client);

    // Cerrar la conexión con el cliente
    client.stop();
    Serial.println("Cliente desconectado");
  }
}
